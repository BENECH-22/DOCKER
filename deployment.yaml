apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver-deployment
  labels:
    app: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - name: webserver
        image: mywebserver:1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: webserver-service
spec:
  selector:
    app: webserver
  ports:
    - port: 80
      targetPort: 3001
  type: LoadBalancer
  
spec:
containers:
- image: mywebserver:1.0
  imagePullPolicy: IfNotPresent
  name: webserver
  env:
  - name: GREETING
    value: "I'm configured now"
    
spec:
containers:
- image: mywebserver:1.0
    imagePullPolicy: IfNotPresent
    name: webserver
    env:
    - name: GREETING
      valueFrom:
        configMapKeyRef:
          name: webserver-configmap
          key: greeting
    
containers: # exists already
- image: mywebserver:1.0 # exists already
  imagePullPolicy: IfNotPresent # exists already
  name: webserver # exists already
  volumeMounts:
  - name: webserver-secret # References the name of the volume specified below
    mountPath: "/var/secret"
    readOnly: true
volumes:
- name: webserver-secret
  secret:
    secretName: webserver-secret # References the secret name from step 1
    optional: false
